<!doctype html>
<html lang="pt-br">
<head>
	<title>Calculando números primos com javascript</title>
	<meta name="description" content="Tutorial sobre programação javascript. Como calcular números primos." />
	<link rel="canonical" href="https://rodrigoschio.github.io/tutoriais/modulos/16/index.htm" />
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width" />
	<link rel="icon" href="../../imagens/favicon.ico" />
	<link href="../../css/styles.css" rel="stylesheet" />
	<link href="../../css/prism.css" rel="stylesheet" />
</head>

<body>
	<h1><a href="../../index.htm"><span>Tutoriais</span></a></h1>
	<main>

<article>
<h2>Introdução</h2>
Esse tutorial se propõe a demostrar uma maneira de calcular os números primos através da programação em javascript.
</article>

<article>
<h2>Criando o arquivo HTML</h2>
Clique com o botão direito do mouse sobre a area de trabalho e selecione a opção 'Novo' 'Documento de Texto'.<br>
Clique duas vezes sobre o arquivo recém criado. O editor de texto 'Bloco de Notas' será aberto.<br>
Digite:
<pre><code class="language-html">&lt;html>
&lt;body>Números Primos
&lt;div id=listagem>2,3,5,7&lt;/div>
&lt;/body>
&lt;/html></code></pre>
Clique em 'Arquivo' 'Salvar como...'. Selecione a opção <b>'Todos os arquivos (*.*)'</b> ao invés de <b>'Documentos de texto (*.txt)'</b>.<br>
Dê o nome de Primos.htm<br>
Feche o 'Bloco de Notas' e exclua o arquivo 'Novo documento de Texto'.
</article>

<article>
<h2>Visualizando e editando o arquivo Criado</h2>
Clique duas vezes sobre o icone 'Primos' na Area de Trabalho.<br>
O 'Navegador' irá abrir o arquivo criado como se fosse uma página da internet.<br>
Minimize a janela do navegador e clique com o botão direito do mouse sobre o icone 'Primos' e clique em 'Editar'.<br>
O 'Bloco de Notas' abrirá o arquivo.<br>
Digite 'Isso é um teste' antes da linha '&lt;/body>'<br>
Pressione 'Ctrl+S' para salvar o arquivo.<br>
Mude para a janela do 'Navegador', e aperte 'F5' para recarregar a 'página'.<br>
Volte para o 'Bloco de Notas', apague a linha 'Isso é um teste', salve, volte para o 'Navegador' e 'recarregue'.<br>
Perceba que voce está 'Programando em HTML'.
</article>

<article>
<h2>Iniciando a Programação</h2>
Volte para o 'Bloco de Notas' e escreva:
<pre><code class="language-html">&lt;script>
numerosprimos=[2,3,5];
&lt;/script></code></pre>
acima da linha '&lt/body>'.<br>
Isso já é o começo da programação.<br>
A 'tag' 'script' indica ao 'navegador' que o código é para ser executado como javascript, não apenas interpretado como 'HTML'.<br>
O código javascript por enquanto é apenas a delaração de uma variável chamada numerosprimos.<br>
Declarar uma variavel é como instruir o 'navegador' a guardar um espaço.<br>
No caso o espaço que o 'navegador' vai guardar se chama 'numerosprimos'.<br>
No espaço chamado numerosprimos guardamos três valores.
</article>

<article>
<h2>O laço 'for'</h2>
Vamos começar a escrever as instruções para o navegador calcular os numeros primos.<br>
Para isso vamos usar o laço 'for'.<br>
Para entender como funciona o laço 'for' digite:
<pre><code class="language-javascript">for(x=1;x&lt;=7;x++)alert(x);</code></pre>
antes da linha '&lt;/script>'.<br>
Salve, volte para o navegador e recarregue a pagina.<br>
O navegador exibirá umas mensagens chatas, de 1 a 7.<br>
Isso explica o laço 'for'.<br>
O laço 'for' repete uma instrução (ou uma lista de instruções).<br>
A instrução repetida era a mensagem chata.<br>

Há muito, muito mais a ser falado sobre o laço 'for' mas não é o foco desse tutorial.<br>

Assim que tiver entendido o funcionamento básico do laço 'for' apague a linha do laço for no código.
</article>

<article>
<h2>Os primos até 15</h2>
Usando o laço 'for' vamos calcular os numeros primos até 15.<br>
Digite:
<pre><code class="language-javascript">for(x=2;x&lt;15;x++)<br>
{ flag=true;<br>

  if(x>2&&x%2==0)flag=false;<br>
  if(x>3&&x%3==0)flag=false;<br>
  if(x>5&&x%5==0)flag=false;<br>

  if(flag)alert(x+' é primo');<br>
}</code></pre>
antes da linha '&lt;/script>'.<br>
Salve, volte para o navegador e recarregue a pagina.<br>
Repare que o navegador exibe mensagens informando os números primos até 15.<br>

Vamos entender as instruções que o navegador executou:<br>

A primeira linha é o laço for. Basicamente falamos para o navegador seguir uma lista de instruções de 2 a 15. Os simbolos '{' e '}' (abre chaves e fecha chaves) servem para delimitar a lista de instruções a serem repetidas. No exemplo anterior era apenas uma instrução a ser repetida, então os simbolos '{' e '}' eram opicionais.<br>

Na primeira linha da lista de instruções a serem repetidas 13 vezes há uma declaração de variável e atribuição de valor.<br>
Instruimos o navegador a reservar um espaço chamado 'flag' e colocamos o valor 'true' dentro desse espaço que o navegador reservou para nós.<br>

As próximas linhas instruem o navegador a validar uma 'expressão' através do 'comando if'.<br>
A linha 'if(x>2&&x%2==0)flag=false;' instrui para o navegador:<br>
'Se o valor de x for maior que dois e o resto da divisão de x por dois for zero então atribua o valor false para o espaço flag.<br>

'If' significa 'Se' em inglês.<br>

O operador '&&' significa 'e'.<br>
Se x maior que dois 'e' ...<br>

O operador '%' retorna o resto da divisão.<br>
Cinco dividido por três dá um e sobra dois, então 5%3 é igual a dois.<br>

Os numeros primos são aqueles que <b>são divisíveis</b> apenas por um e por si mesmo.<br>
Os números primos são aqueles que o resto da divisão é zero apenas para o número um e o número em si.<br>
Se o resto da divisão for zero, significa que o número <b>é divisivel</b>.<br>
Nove dividido por três dá três e sobra zero.<br>

Dentro do if usa-se '==' para comparar a igualdade.<br>
O simbolo '=' sozinho significa atribuição de valor.<br>

Então novamente,<br>
A segunda linha da lista de instruções a serem repetidas 13 vezes instrui ao navegador:<br>
<b>'SE'</b>( x é maior que dois <b>'e'</b> x <b>é divisível</b> por dois ) então atribua o valor false para o espaço flag.<br>

Essa linha se repete para o número três e cinco.<br>
Então se o número x (que começa em dois e vai até catorze) for divisivel por dois ou três ou cinco então o espaço 'flag' vai conter o valor 'false'.<br>

A ultima linha da lista de instruções a serem repetidas 13 vezes instrui ao navegador:<br>
Se o valor do espaço flag for verdadeiro então exiba uma mensagem informando que x é primo.
</article>

<article>
<h2>Os primos até 1000</h2>
Mas os números primos <b><u>não são só</u></b> aqueles que não são divisíveis por dois e três e cinco.<br>
Por exmplo o número 121, não é primo.<br>
Não é divisível por dois, nem por três, nem por cinco, nem por sete... mas é divisível por onze.<br>
11x11 == 121<br>
121%11==0<br>

Então para verificarmos se o número x é impar temos que <b>testar se ele é divisível por todos os números primos não maiores que a raiz quadrada dele.</b><br>
Nós não... o navegador.<br>
Vamos instruir o navegador:<br>
substitua o laço for por
<pre><code class="language-javascript">for(x=7;x&lt;1000;x+=2)<br>
{ flag=true;<br>
  for(y=0;y&lt;numerosprimos.length;y++)if(x%numerosprimos[y]==0)flag=false;<br>
  if(flag)numerosprimos.push(x);<br>
}<br>
document.getElementById('listagem').innerHTML=numerosprimos;</code></pre>
Salve, volte para o navegador e recarregue a pagina.<br>
Repare que o navegador exibe uma lista com os números primos até 1000.<br>

Vamos entender as instruções que o navegador executou:<br>

A primeira linha é um 'laço for' que vai de 7 até 1000.<br>
O resto das instruções (exceto a última) serão executadas 496 vezes.<br>
Esse laço instrui o navegador a ir do 7 até o 1000 de dois em dois.<br>

A primeira linha da lista de instruções do laço atribui o valor true à variável flag.<br>

A segunda linha da lista de instruções é um laço com uma instrução condicional.<br>
Podemos entender como:<br>
'Para o y valendo zero até y valendo o tamanho do vetor numerosprimos, com o y incrementando de um em um: se o resto da divisão de x pelo elemento y do vetor numerosprimos for zero então atribua o valor false para a variável flag.'<br>

Há uma novidade nesse laço for, ele é repetido um número variável de vezes.<br>
A expressão 'numerosprimos.length' retorna um valor que varia durante a execução do código.<br>
O espaço 'numerosprimos' foi declarado como um tipo especial de espaço.<br>
Ele é um vetor.<br>
Inicialmente foram ocupados três espaços, mas durante e execução do programa mais espaços vão sendo ocupados.<br>
Sendo assim, na primeira das 496 vezes que essa instrução é executada o y vai de zero até 2 porque o vetor numerosprimos tem três posições ocupadas, a posição zero é ocupada com o valor 2, a posição um é ocupada com o valor 3 e a posição dois é ocupada com o valor 5.<br>
Sobre o vetor numerosprimos, logo após sua inicialização podemos dizer que:<br>
numerosprimos.length==3 (seu tamanho é 3)<br>
numerosprimos[0]==2<br>
numerosprimos[1]==3<br>
numerosprimos[2]==5<br>

Continuando nessa instrução ao navegador que é composta de um laço for, um comando if e uma atribuição de valor:<br>

Se o resto da divisão do valor x (que varia de 7 até 1000) pelo valor numerosprimos[y] (que varia de 2 até o maior número primo armazenado no vetor numerosprimos) for zero então atribua o valor false à variável flag.<br>
Ou seja:<br>
Se o valor x é divisivel por algum dos números primos já encontados então o valor de flag será false.<br>

A última instrução da lista de instruções que é repetida 496 vezes pode ser entendida como:<br>
Se o valor da variável flag for true então adicione o valor de x no final do vetor numerosprimos.<br>
Por que se passou por todos no números primos e não atribuiu o valor false a variável flag é por que x é um número primo.<br>

A última instrução não está dentro de nenhum laço e só é executada uma vez.<br>
Ela instrui o navegador a exibir dentro da div chamada listagem os valores encontrados e armazenados no vetor numerosprimos.
</article>

<article>
<h2>Final Source</h2>
<pre><code class="language-html">&lt;html>
&lt;body>
Números Primos
&lt;div id=listagem>2,3,5,7&lt;/div>
&lt;script>
numerosprimos=[2,3,5];
for(x=7;x&lt;1000;x+=2)
{ flag=true;
  for(y=0;y&lt;numerosprimos.length;y++)if(x%numerosprimos[y]==0)flag=false;
  if(flag)numerosprimos.push(x);
}
document.getElementById('listagem').innerHTML=numerosprimos;
&lt;/script>
&lt;/body>
&lt;/html></code></pre>
</article>

<article>
<h2>Não maiores que a raiz quadrada</h2>
O que foi explanado até aqui está certo mas pode ser melhorado.<br>
Há um desperdício de processamento.<br>
O 'laço for' de dentro do 'laço for' principal pode ser melhorado.<br>
Da maneira como está ele testa se o numero é primo atravéz de consecutivas operações de 'resto da divisão'. Só que ele está testando demais da conta.<br>
Vamos tomar por exemplo o número 127 que é primo:<br>
Da maneira como está sendo feito, o navegador irá testar se o número 127 é primo testando se ele é divisível por 2 ou 3 ou 5 ou 7 ou 11 ou 13 ou 17 ou 19 ou 23 ou 29 ou 31 ou 37 ou 41 ou 43 ou 47 ou 53 ou 59 ou 61 ou 67 ou 71 ou 73 ou 79 ou 83 ou 89 ou 97 ou 101 ou 103 ou 107 ou 109 ou 113.<br>

O navegador poderia testar apenas até o número 13.<br>

Não existe a possibilidade de um número x ser divisível por um número y maior que sua raiz quadrada se não foi encontrado nenhum divisor de x menor que a raiz quadrada.<br>
Por que um produto de y e z (maiores que a raiz quadrada de x) só pode resultar em um número maior que x.<br>

Na prática, para melhorar bastante a performance do código basta substituir 'y&lt;numerosprimos.length' por 'numerosprimos[y]*numerosprimos[y]<=x'.<br>

O 'laço for' de dentro ficará:
<pre><code class="language-javascript">for(y=0;numerosprimos[y]*numerosprimos[y]&lt;=x;y++)if(x%numerosprimos[y]==0)flag=false;</code></pre>
</article>

<article>
<h2>Mais uma melhoria</h2>
Ainda podemos evitar processamentos desnecessários.<br>
No caso de um número não primo como por exemplo 81 o navegador irá testar se é divisível por todos o números primos não maiores que sua raiz quadrada: 2,3,5,7<br>
Só que se já testou a divisão por três e marcou a variável flag como false não é nescessário testar a divisão por 5 e 7.<br>
Nesse caso são apenas dois testes mas para números maiores são mais testes desnecessários.<br>
Vamos alterar de 'numerosprimos[y]*numerosprimos[y]<=x' para 'flag&&numerosprimos[y]*numerosprimos[y]<=x'.<br>

O 'laço for' de dentro ficará:
<pre><code class="language-javascript">for(y=0;flag&&numerosprimos[y]*numerosprimos[y]&lt;=x;y++)if(x%numerosprimos[y]==0)flag=false;</code></pre>
</article>

<article>
<h2>E outra melhoria...</h2>
Não precisamos testar se os números são divisíveis por dois porque o laço for começa em 7 e vai de dois em dois.<br>
Vamos substituir 'for(y=0;' por 'for(y=1;' assim a bateria de testes para descubrir se x é divisível por todos os primos não maiores que sua raiz quadrada começa pelo número 3 (que é o elemento numerosprimos[1]).<br>

O 'laço for' de dentro ficará:
<pre><code class="language-javascript">for(y=1;flag&&numerosprimos[y]*numerosprimos[y]&lt;=x;y++)if(x%numerosprimos[y]==0)flag=false;</code></pre>
</article>

<article>
<h2>Os primos até 100.000</h2>
Basta mudar de 1000 para 100000 no laço 'for'.<br>
E ter um pouco de paciência.<br>

Não recomendo mudar para um milhão pois demora muito, sobrecarrega o navegador...
</article>

<article>
<h2>Utilização dos Números Primos</h2>
Fatores primos são usados na criptografia de transações bancárias.
</article>

	<div id="coment"><div id="disqus_thread"></div></div>
	</main>
	<footer>
		<button onclick="location.href = '../../index.htm';">home</button>
		<button onclick="exibe();">seções</button>
		<button onclick="(document.head || document.body).appendChild(s);">comente</button>
	</footer>

	<script src="../../js/script.js"></script>
	<script src="../../js/prism.js"></script>
</body>
</html>
